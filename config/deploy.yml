# Name of your application. Used to uniquely configure containers.
service: fa_github_event_notifier

# Name of the container image.
image: peter-testing-org/fa_github_event_notifier

# Deploy to these servers.
servers:
  - ec2-3-252-29-84.eu-west-1.compute.amazonaws.com

ssh:
  user: root

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: ghcr.io
  username: singhprd

  # Always use an access token rather than real password when possible.
  password:
    - GHCR_TOKEN

# Inject ENV variables into containers (secrets come from .env).
env:
  secret:
    - RAILS_MASTER_KEY
#   clear:
#     DB_HOST: 192.168.0.2

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
#   secrets:
#     - GITHUB_TOKEN

builder:
  args:
    RUBY_VERSION: 3.1.4
  multiarch: false
  remote:
    arch: amd64
    host: ssh://root@192.168.0.1
  # local:
  #   arch: arm64
  #   host: unix:///Users/petersingh/.rd/docker.sock

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000
